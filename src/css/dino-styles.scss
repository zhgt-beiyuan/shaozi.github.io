/* 原子化样式 - 参考 tailwindcss 文档，https://docs.tailwindchina.com/docs/customizing-colors，部分样式与 infima 源码重叠，仅供学习使用 
 * 0.0625rem 为 1px
 * 1rem 为 16px
 *
 * .w-{} - 宽度
 * .h-{} - 高度
 * .m-{} - 外边距
 * .p-{} - 内边距
 * .text-{} - 方向 / 粗细 / 大小 / 下划线
 * .flex-{} - flex 方向 / 换行
 * .justify-{} - flex 对齐方式
 * .items-{} - flex 对齐方式
 * .self-{} - flex 子元素对齐方式
 * .{} - display 类型 / position 类型
 * .color-{} - 文字颜色
 * .bg-{} - 背景颜色
 * .border-{} - 边框类型 / 宽度 / 颜色
 * .transition-{} - 过渡类型
 * .duration-{} - 过渡时间
 * .opacity-{} - 透明度
 * .bg-opacity-{} - 背景透明度
 * .border-opacity-{} - 背景透明度
 * .rounded-{} - 边框圆角
 * .shadow-{} - 盒阴影
 * .cursor-{} - 用户手势
 * .select-{} - 用户文本选择行为
 * .z-{} - 元素堆栈顺序
 * .overflow-{} - 控制元素超出容器的行为
 */

/* 🍋 公共方法 🍋 */
/* Code - 代码块 */
@mixin code-style {
  word-break: break-word;
  border-radius: 3px;
  overflow-x: auto;
  background-color: var(--dino-color-code-bg);
  color: var(--dino-color-code);
  padding: 0 5px;
  border: none;
  // font-weight: 600;
  font-size: var(--dino-font-size-sm);
  margin-top: -3px;
  display: inline-block;
  line-height: 17px;
}

/* 🍋 原子化样式 🍋 */
/* Width - 宽度 */
$width-list: ((full, 100%), auto);
@each $key, $value in $width-list {
  .w-#{$key} {
    width: $value or $key;
  }
}
// 填充满整个元素
.full {
  &::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
}

/* Height - 高度 */
$height-list: ((full, 100%), auto);
@each $key, $value in $height-list {
  .h-#{$key} {
    height: $value or $key;
  }
}

/* Margin / Padding - 外/内边距 */
/* Space - 见局（以 0.25rem / 4px 递增） */
$--dino-space-0: 0;
$--dino-space-1: 0.25rem;
$--dino-space-2: 0.5rem;
$--dino-space-3: 0.75rem; // 12px
$--dino-space-4: 1rem;
$--dino-space-5: 1.25rem;
$--dino-space-6: 1.5rem;
$--dino-space-7: 1.75rem;
$--dino-space-8: 2rem;
$--dino-space-10: 2.5rem;
$--dino-space-12: 3rem;
$--dino-space-14: 3.5rem;
$--dino-space-16: 4rem;
$--dino-space-18: 4.5rem;
$--dino-space-20: 5rem;
$--dino-space-24: 6rem;

$space-list: (
  (0, $--dino-space-0),
  (1, $--dino-space-1),
  (2, $--dino-space-2),
  (3, $--dino-space-3),
  (4, $--dino-space-4),
  (5, $--dino-space-5),
  (6, $--dino-space-6),
  (7, $--dino-space-7),
  (8, $--dino-space-8),
  (10, $--dino-space-10),
  (12, $--dino-space-12),
  (14, $--dino-space-14),
  (16, $--dino-space-16),
  (18, $--dino-space-18),
  (20, $--dino-space-20),
  (24, $--dino-space-24)
);
@each $key, $value in $space-list {
  .m-#{$key} {
    margin: $value;
  }
  .mb-#{$key} {
    margin-bottom: $value;
  }
  .mt-#{$key} {
    margin-top: $value;
  }
  .ml-#{$key} {
    margin-left: $value;
  }
  .mr-#{$key} {
    margin-right: $value;
  }
  .my-#{$key} {
    margin-top: $value;
    margin-bottom: $value;
  }
  .mx-#{$key} {
    margin-left: $value;
    margin-right: $value;
  }
  .p-#{$key} {
    padding: $value;
  }
  .pb-#{$key} {
    padding-bottom: $value;
  }
  .pt-#{$key} {
    padding-top: $value;
  }
  .pl-#{$key} {
    padding-left: $value;
  }
  .pr-#{$key} {
    padding-right: $value;
  }
  .py-#{$key} {
    padding-top: $value;
    padding-bottom: $value;
  }
  .px-#{$key} {
    padding-left: $value;
    padding-right: $value;
  }
}
.mx-auto {
  margin: 0 auto;
}
.ml-auto {
  margin-left: auto; // 元素右对齐
}
.mr-auto {
  margin-right: auto; // 元素左对齐
}

/* Color - 颜色 */
.color-inherit {
  color: inherit !important;
}
.border-transparent {
  border-color: transparent !important;
}

/* Text-Align - 文本对齐 */
$text-align-list: (center, left, right, justify);
@each $key in $text-align-list {
  .text-#{$key} {
    text-align: $key;
  }
}

/* Font-Size - 字体大小 */
$--dino-leading-none: 1;
$--dino-leading-tight: 1.25;
$--dino-leading-snug: 1.375;
$--dino-leading-normal: 1.5;
$--dino-leading-relaxed: 1.625;
$--dino-leading-loose: 2;
$--dino-leading-3: 0.75rem;
$--dino-leading-4: 1rem;
$--dino-leading-5: 1.25rem;
$--dino-leading-6: 1.5rem;
$--dino-leading-7: 1.75rem;
$--dino-leading-8: 2rem;
$--dino-leading-9: 2.25rem;
$--dino-leading-10: 2.5rem;

$font-size-list: (
  (xs, var(--dino-font-size-xs), $--dino-leading-4),
  (sm, var(--dino-font-size-sm), $--dino-leading-5),
  (base, var(--dino-font-size-base), $--dino-leading-6),
  (lg, var(--dino-font-size-lg), $--dino-leading-7),
  (xl, var(--dino-font-size-xl), $--dino-leading-7),
  (2xl, var(--dino-font-size-2xl), $--dino-leading-8),
  (3xl, var(--dino-font-size-3xl), $--dino-leading-9),
  (4xl, var(--dino-font-size-4xl), $--dino-leading-10),
  (5xl, var(--dino-font-size-5xl), $--dino-leading-none)
);
@each $key, $size, $line in $font-size-list {
  .text-#{$key} {
    font-size: $size;
    line-height: $line;
  }
}

/* Font-Weight - 字体粗细 */
$font-weight-list: (
  (thin, var(--dino-font-weight-thin)),
  (light, var(--dino-font-weight-light)),
  (normal, var(--dino-font-weight-normal)),
  (medium, var(--dino-font-weight-medium)),
  (bold, var(--dino-font-weight-bold))
);
@each $key, $value in $font-weight-list {
  .text-#{$key} {
    font-weight: $value;
  }
}

/* Text-Decoration - 文字下划线 */
$text-decoration-list: (underline, line-through, (no-underline, none));
@each $key, $value in $text-decoration-list {
  .text-#{$key} {
    text-decoration: $value or $key;
  }
}

/* Line-Height - 行高 */
$line-height-list: (
  (3, $--dino-leading-3),
  (4, $--dino-leading-4),
  (5, $--dino-leading-5),
  (6, $--dino-leading-6),
  (7, $--dino-leading-7),
  (8, $--dino-leading-8),
  (9, $--dino-leading-9),
  (10, $--dino-leading-10),
  (none, $--dino-leading-none),
  (tight, $--dino-leading-tight),
  (snug, $--dino-leading-snug),
  (normal, $--dino-leading-normal),
  (relaxed, $--dino-leading-relaxed),
  (loose, $--dino-leading-loose)
);
@each $key, $line in $line-height-list {
  .heading-#{$key} {
    line-height: $line;
  }
}

/* Display - 元素显示类型 */
$display-list: (block, inline-block, inline, flex, grid, hidden);
@each $key in $display-list {
  .#{$key} {
    display: $key;
  }
}

/* Flex-Direction - flex 方向 */
$flex-direction-list: (row, (col, column), row-reverse, column-reverse);
@each $key, $value in $flex-direction-list {
  .flex-#{$key} {
    flex-direction: $value or $key;
  }
}

/* Flex-Wrap - flex 换行 */
$flex-wrap-list: (wrap, wrap-reverse, nowrap);
@each $key in $flex-wrap-list {
  .flex-#{$key} {
    flex-wrap: $key;
  }
}

/* Justify-Content - flex 对齐方式 */
$justify-content-list: (
  center,
  (between, space-between),
  (around, space-around),
  (evenly, space-evenly),
  (start, flex-start),
  (end, flex-end)
);
@each $key, $value in $justify-content-list {
  .justify-#{$key} {
    justify-content: $value or $key;
  }
}

/* Align-Items - flex 对齐方式 */
$align-items-list: (center, baseline, stretch, (start, flex-start), (end, flex-end));
@each $key, $value in $align-items-list {
  .items-#{$key} {
    align-items: $value or $key;
  }
}

/* Align-Self - flex 子元素对齐方式 */
$align-self-list: (center, auto, stretch, (start, flex-start), (end, flex-end));
@each $key, $value in $align-self-list {
  .self-#{$key} {
    align-self: $value or $key;
  }
}

/* Position - 定位 */
$position-list: (static, fixed, absolute, relative, sticky);
@each $key in $position-list {
  .#{$key} {
    position: $key;
  }
}

/* Top/Right/Left/Bottom - 方向偏移 */
// 分数做类名时，需要转换字符 \ 进行转换
$inset-list: (0, auto, (full, 100%), (1\/2, 50%), (3\/4, 75%), (1\/4, 25%));
@each $key, $value in $inset-list {
  .inset-#{'' + $key} {
    top: $value or $key;
    right: $value or $key;
    left: $value or $key;
    bottom: $value or $key;
  }
  .top-#{'' + $key} {
    top: $value or $key;
  }
  .left-#{'' + $key} {
    left: $value or $key;
  }
  .right-#{'' + $key} {
    right: $value or $key;
  }
  .bottom-#{'' + $key} {
    bottom: $value or $key;
  }
}

/* Translate - 转换 - 平移 */
$translate-list: (0, (full, 100%), (1\/2, 50%), (3\/4, 75%), (1\/4, 25%));
@each $key, $value in $translate-list {
  .translate-#{'' + $key} {
    transform: translate($value);
  }
  .translate-y-#{'' + $key} {
    transform: translateY($value);
  }
  .-translate-y-#{'' + $key} {
    transform: translateY(-#{$value});
  }
  .translate-x-#{'' + $key} {
    transform: translateX($value);
  }
  .-translate-x-#{'' + $key} {
    transform: translateX(-#{$value});
  }
}

/* Z-Index - 堆栈顺序 */
$z-index-list: (auto, 0, 50, 100, 200, 500, 999);
@each $key in $z-index-list {
  .z-#{$key} {
    z-index: $key;
  }
}

/* Overflow - 控制内容超出容器的行为 */
$overflow-list: (auto, hidden, visible, scroll);
@each $key in $z-index-list {
  .overflow-#{$key} {
    overflow: $key;
  }
  .overflow-x-#{$key} {
    overflow-x: $key;
  }
  .overflow-y-#{$key} {
    overflow-y: $key;
  }
}

/* Border-Style - 边框类型 */
$border-style-list: (solid, dashed, dotted, double, none);
@each $key in $border-style-list {
  .border-#{$key} {
    border-style: $key;
  }
  .border-t-#{$key} {
    border-top-style: $key;
  }
  .border-r-#{$key} {
    border-right-style: $key;
  }
  .border-b-#{$key} {
    border-bottom-style: $key;
  }
  .border-l-#{$key} {
    border-left-style: $key;
  }
}

/* Border-Width - 边框宽度 */
$--dino-border-width-0: 0;
$--dino-border-width-1: 1px;
$--dino-border-width-2: 2px;
$--dino-border-width-4: 4px;
$--dino-border-width-8: 8px;

$border-width-list: (
  (0, $--dino-border-width-0),
  (1, $--dino-border-width-1),
  (2, $--dino-border-width-2),
  (4, $--dino-border-width-4),
  (8, $--dino-border-width-8)
);
@each $key, $value in $border-width-list {
  .border-#{$key} {
    border-width: $value;
  }
  .border-t-#{$key} {
    border-top-width: $value;
  }
  .border-r-#{$key} {
    border-right-width: $value;
  }
  .border-b-#{$key} {
    border-bottom-width: $value;
  }
  .border-l-#{$key} {
    border-left-width: $value;
  }
}

/* Border-Radius - 边框圆角 */
$--dino-border-radius-none: 0;
$--dino-border-radius-sm: 0.125rem;
$--dino-border-radius-base: 0.25rem;
$--dino-border-radius-md: 0.375rem;
$--dino-border-radius-lg: 0.5rem;
$--dino-border-radius-xl: 0.75rem;
$--dino-border-radius-2xl: 1rem;
$--dino-border-radius-3xl: 1.5rem;
$--dino-border-radius-full: 100%;

$border-radius-list: (
  (none, $--dino-border-radius-none),
  (sm, $--dino-border-radius-sm),
  (base, $--dino-border-radius-base),
  (md, $--dino-border-radius-md),
  (lg, $--dino-border-radius-lg),
  (xl, $--dino-border-radius-xl),
  (2xl, $--dino-border-radius-2xl),
  (3xl, $--dino-border-radius-3xl),
  (full, $--dino-border-radius-full)
);
@each $key, $value in $border-radius-list {
  .rounded-#{$key} {
    border-radius: $value;
  }
  .rounded-t-#{$key} {
    border-top-left-radius: $value;
    border-top-right-radius: $value;
  }
  .rounded-r-#{$key} {
    border-top-right-radius: $value;
    border-bottom-right-radius: $value;
  }
  .rounded-b-#{$key} {
    border-bottom-left-radius: $value;
    border-bottom-right-radius: $value;
  }
  .rounded-l-#{$key} {
    border-top-left-radius: $value;
    border-bottom-left-radius: $value;
  }
  .rounded-tl-#{$key} {
    border-top-left-radius: $value;
  }
  .rounded-tr-#{$key} {
    border-top-right-radius: $value;
  }
  .rounded-bl-#{$key} {
    border-bottom-left-radius: $value;
  }
  .rounded-br-#{$key} {
    border-bottom-right-radius: $value;
  }
}

/* Transition - 过渡 */
$--dino-duration-75: 75ms;
$--dino-duration-150: 150ms;
$--dino-duration-200: 200ms;
$--dino-duration-300: 300ms;
$--dino-duration-400: 400ms;
$--dino-duration-500: 500ms;
$--dino-duration-700: 700ms;
$--dino-duration-1000: 1000ms;

$--dino-timing-function-ease-linear: linear;
$--dino-timing-function-ease-in: cubic-bezier(0.4, 0, 1, 1);
$--dino-timing-function-ease-out: cubic-bezier(0, 0, 0.2, 1);
$--dino-timing-function-ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);

$transition-list: (
  none,
  (all, $--dino-duration-300),
  (transform, $--dino-duration-400),
  (opacity, $--dino-duration-300)
);
@each $property, $duration in $transition-list {
  .transition-#{$property} {
    transition-property: $property;
    transition-duration: $duration;
    transition-timing-function: $--dino-timing-function-ease-in-out;
  }
}

/* Transition-Duration - 过渡时间 */
$duration-list: (
  (150, $--dino-duration-150),
  (200, $--dino-duration-200),
  (300, $--dino-duration-300),
  (400, $--dino-duration-400),
  (500, $--dino-duration-500),
  (700, $--dino-duration-700),
  (1000, $--dino-duration-1000)
);
@each $time, $duration in $duration-list {
  .duration-#{$time} {
    transition-duration: $duration;
  }
}

/* Opacity - 透明度 */
.opacity-0,
.bg-opacity-0,
.border-opacity-0 {
  opacity: 0;
}

/* Cursor - 手势 */
$cursor-list: (default, auto, pointer, wait, text, move, not-allowed);
@each $key in $cursor-list {
  .cursor-#{$key} {
    cursor: $key;
  }
}

/* User-Select - 文本选中状态 */
$user-select-list: (text, all, auto, none);
@each $key in $user-select-list {
  .select-#{$key} {
    user-select: $key;
  }
}

/* 单行省略 */
.single-line-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* TODO 多行省略 */
